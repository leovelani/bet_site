from fastapi import FastAPI
from contextlib import asynccontextmanager
from src.api import user, bet
from src.models.database import engine

# CriaÃ§Ã£o do lifespan para eventos de inicializaÃ§Ã£o e finalizaÃ§Ã£o
@asynccontextmanager
async def lifespan(app: FastAPI):
    print("ğŸš€ Iniciando aplicaÃ§Ã£o...")
    yield  # O servidor roda enquanto nÃ£o sair desse `yield`
    print("ğŸ›‘ Encerrando aplicaÃ§Ã£o...")
    await close_db_connection()

# FunÃ§Ã£o para fechar conexÃ£o com o banco
async def close_db_connection():
    print("ğŸ”Œ Fechando conexÃ£o com o banco de dados...")
    await engine.dispose()

app = FastAPI(lifespan=lifespan)

# Adicionar rotas
app.include_router(user.router, prefix="/user", tags=["User"])
app.include_router(bet.router, prefix="/bet", tags=["Bet"])
